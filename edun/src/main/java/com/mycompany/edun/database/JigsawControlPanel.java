/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.edun.database;

import com.mycompany.edun.database.*;
import com.mycompany.edun.HomeAdmin;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author ivanbesti
 */
public class JigsawControlPanel extends javax.swing.JFrame {

    private File selectedFile;

    /**
     * Creates new form addNewQuestion
     */
    public JigsawControlPanel() {
        initComponents();
        read();
        refreshForm();
    }

    private void refreshForm() {
        // Menyegarkan JFrame
        selectedFile = null;
        jTextField1.setText("");
        jTextField2.setText("");
        jLabel6.setIcon(null);
        try {
            String perintah_SQL = "SELECT COUNT(id) FROM jigsaw_puzzle;";
            Connection penghubung = (Connection) DBConnection.konfigurasi_koneksiDB();
            Statement pernyataanSQL = penghubung.createStatement();
            ResultSet hasil_SQL = pernyataanSQL.executeQuery(perintah_SQL);
            if (hasil_SQL.next()) {
                int id = hasil_SQL.getInt(1);
                id = id + 1;
                String str = String.valueOf(id);
                jLabel10.setText(str);
            } else {
                jLabel10.setText("1");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean isImageFile(File file) {
        String extension = FilenameUtils.getExtension(file.getName()).toLowerCase();
        return extension.equals("jpg") || extension.equals("jpeg") || extension.equals("png") || extension.equals("gif");
    }

    private void displayImagePreview(File file) {
        try {
            ImageIcon icon = new ImageIcon(ImageIO.read(file));
            Image image = icon.getImage();
            Image scaledImage = image.getScaledInstance(jLabel6.getWidth(), jLabel6.getHeight(), Image.SCALE_SMOOTH);
            jLabel6.setIcon(new ImageIcon(scaledImage));
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error displaying image preview: " + e.getMessage());
        }
    }

    private void read() {
        DefaultTableModel jigsawData = new DefaultTableModel();
        jigsawData.addColumn("No");
        jigsawData.addColumn("ID");
        jigsawData.addColumn("Name");
        jigsawData.addColumn("Path");
        jigsawData.addColumn("Upload Time");

        try {
            String query = "SELECT * FROM jigsaw_puzzle";

            Connection connection = (Connection) DBConnection.konfigurasi_koneksiDB();
            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery(query);

            int i = 1;
            while (resultSet.next()) {
                jigsawData.addRow(new Object[]{
                    i++,
                    resultSet.getString(1) != null ? resultSet.getString(1) : "",
                    resultSet.getString(2) != null ? resultSet.getString(2) : "",
                    resultSet.getString(3) != null ? resultSet.getString(3) : "",
                    resultSet.getString(4) != null ? resultSet.getString(4) : ""
                });
                jTable2.setModel(jigsawData);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(150, 183));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "ID", "Name", "Path", "Upload Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, 930, -1));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 40)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/add new question.png"))); // NOI18N
        jLabel1.setText("Jigsaw Puzzle");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 19, -1, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/close.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 20, -1, -1));

        jButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/save.png"))); // NOI18N
        jButton1.setText("Upload File");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, -1, -1));

        jButton5.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/clear question.png"))); // NOI18N
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 230, -1, -1));

        jButton6.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/save.png"))); // NOI18N
        jButton6.setText("Update");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 280, -1, -1));

        jLabel6.setMaximumSize(new java.awt.Dimension(800, 800));
        jLabel6.setMinimumSize(new java.awt.Dimension(800, 800));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 390, 240, 240));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel3.setText("Current ID:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel4.setText("File:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, -1, -1));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel5.setText("Path:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        jTextField1.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 810, -1));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel10.setText("00");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        jTextField2.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 810, -1));

        jButton2.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/clear question.png"))); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, -1, -1));

        jButton4.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/save.png"))); // NOI18N
        jButton4.setText("Save");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 190, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/BG.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        refreshForm();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        HomeAdmin.open = 0;
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String newFileName = jTextField1.getText();
        String newId = jLabel10.getText();
        if (selectedFile != null && !newFileName.isBlank()) {
            File destinationFolder = new File("src/main/resources/assets/JigsawPuzzleImages/");
            String path = destinationFolder.getPath() + File.separator + newFileName;

            try {
                Connection con = DBConnection.konfigurasi_koneksiDB();
                PreparedStatement ps = con.prepareStatement("INSERT INTO jigsaw_puzzle (id, name, path) VALUES (?, ?, ?);");
                ps.setString(1, newId);
                ps.setString(2, newFileName);
                ps.setString(3, path);
                ps.executeUpdate();

                // Ensure the destination folder exists
                if (!destinationFolder.exists()) {
                    destinationFolder.mkdirs();
                }

                // Copy the selected file to the destination folder
                FileUtils.copyFileToDirectory(selectedFile, destinationFolder);

                JFrame jf = new JFrame();
                jf.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(jf, "Successfully Added!");
            } catch (HeadlessException | IOException | SecurityException | SQLException e) {
                JFrame jf = new JFrame();
                jf.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(jf, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                read();
                refreshForm();
            }
        } else if (newFileName.isBlank()) {
            JOptionPane.showMessageDialog(this, "Fill the text field.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No file selected to upload.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            if (isImageFile(selectedFile)) {
                JOptionPane.showMessageDialog(this, "File selected: " + selectedFile.getName());
                jTextField1.setText(selectedFile.getName());
                jTextField2.setText(selectedFile.getAbsolutePath());
                displayImagePreview(selectedFile);
            } else {
                jLabel6.setIcon(null);
                selectedFile = null;
                JOptionPane.showMessageDialog(this, "Please select a valid image file (jpg, jpeg, png, gif).");
            }
        } else {
            selectedFile = null;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String id = jLabel10.getText();
        try {
            Connection con = (Connection) DBConnection.konfigurasi_koneksiDB();
            PreparedStatement ps = con.prepareStatement("DELETE FROM jigsaw_puzzle WHERE id=?");
            ps.setString(1, id);
            ps.executeUpdate();
            deleteFile();
            JFrame jf = new JFrame();
            jf.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(jf, "Image Succesfully Deleted");
        } catch (HeadlessException | SecurityException | SQLException e) {
            JFrame jf = new JFrame();
            jf.setAlwaysOnTop(true);
            JOptionPane.showMessageDialog(jf, e);
        } finally {
            read();
            refreshForm();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void deleteFile() {
        String selectedFileName = jTextField1.getText();
        if (selectedFileName != null) {
            File fileToDelete = new File("src/main/resources/assets/JigsawPuzzleImages/", selectedFileName);

            if (fileToDelete.exists()) {
                fileToDelete.delete();
            }

            refreshForm();
            JOptionPane.showMessageDialog(this, "File deleted successfully!");
        } else {
            JOptionPane.showMessageDialog(this, "No file selected to delete.");
        }
    }

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:                                     
        String id = jLabel10.getText();
        String name = jTextField1.getText();
        String newPath = "src/main/resources/assets/JigsawPuzzleImages/" + name;

        if (!id.isEmpty()) {
            try {
                Connection con = DBConnection.konfigurasi_koneksiDB();
                StringBuilder sql = new StringBuilder("UPDATE jigsaw_puzzle SET ");
                boolean needsComma = false;

                if (!name.isEmpty()) {
                    sql.append("name=?");
                    needsComma = true;
                }
                if (needsComma) {
                    sql.append(", ");
                }
                sql.append("path=? WHERE id=?;");

                PreparedStatement ps = con.prepareStatement(sql.toString());

                int paramIndex = 1;
                if (!name.isEmpty()) {
                    ps.setString(paramIndex++, name);
                }
                ps.setString(paramIndex++, newPath);
                ps.setString(paramIndex, id);
                ps.executeUpdate();

                // Get the old path before updating
                String oldPath = jTextField2.getText();
                File oldFile = new File(oldPath);
                File newFile = new File(newPath);

                // Ensure the destination folder exists
                File destinationFolder = newFile.getParentFile();
                if (!destinationFolder.exists()) {
                    destinationFolder.mkdirs();
                }

                // If a new file is selected, copy it to the new path
                if (selectedFile != null) {
                    if (newFile.exists()) {
                        newFile.delete();
                    }
                    FileUtils.copyFile(selectedFile, newFile);
                } else {
                    // If no new file is selected, rename the old file to the new name
                    if (oldFile.exists() && !oldFile.equals(newFile)) {
                        if (newFile.exists()) {
                            newFile.delete();
                        }
                        oldFile.renameTo(newFile);
                    }
                }

                JFrame jf = new JFrame();
                jf.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(jf, "File Successfully Updated!");
            } catch (HeadlessException | SecurityException | SQLException | IOException e) {
                JFrame jf = new JFrame();
                jf.setAlwaysOnTop(true);
                JOptionPane.showMessageDialog(jf, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                read();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please choose from table before update.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        int row = jTable2.rowAtPoint(evt.getPoint());

        String id = jTable2.getValueAt(row, 1).toString();
        jLabel10.setText(id);

        String name = jTable2.getValueAt(row, 2).toString();
        jTextField1.setText(name);

        String path = jTable2.getValueAt(row, 3).toString();
        jTextField2.setText(path);

        ImageIcon icon = new ImageIcon(path);
        jLabel6.setIcon(icon);
    }//GEN-LAST:event_jTable2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JigsawControlPanel.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JigsawControlPanel.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JigsawControlPanel.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JigsawControlPanel.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JigsawControlPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
